{
    "openapi": "3.0.0",
    "info": {
        "title": "Your API Documentation",
        "description": "API documentation for your Laravel project",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "8a56853624e025573120a09a4c75d468",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "full_name",
                                    "email",
                                    "phone_number",
                                    "password"
                                ],
                                "properties": {
                                    "full_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "johndoe@example.com"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "0123456789"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "Password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully, verification email sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "full_name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "johndoe@example.com"
                                                },
                                                "phone_number": {
                                                    "type": "string",
                                                    "example": "0123456789"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "user"
                                                },
                                                "email_verified_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": null
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|abcd1234tokenexample"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Please verify your email address."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The email field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate a user and return a token",
                "description": "Logs in a user with email and password, returning a Sanctum token if credentials are valid and email is verified.",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User's email",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Welcome message with user's full name",
                                            "type": "string",
                                            "example": "Welcome, John Doe"
                                        },
                                        "access_token": {
                                            "description": "Sanctum authentication token",
                                            "type": "string",
                                            "example": "1|abc123def456"
                                        },
                                        "token_type": {
                                            "description": "Token type",
                                            "type": "string",
                                            "example": "Bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation or authentication error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message for invalid credentials or unverified email",
                                            "type": "string",
                                            "example": "The provided credentials are incorrect."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log out the authenticated user",
                "operationId": "fe8f3429cd6979b3b4517e186505f9f9",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated - No valid token provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get the authenticated user's details",
                "operationId": "31234491f21a35d2de09d4fae7ee13c4",
                "responses": {
                    "200": {
                        "description": "User retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "full_name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "johndoe@example.com"
                                                },
                                                "phone_number": {
                                                    "type": "string",
                                                    "example": "0123456789"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "user"
                                                },
                                                "picture": {
                                                    "type": "string",
                                                    "example": "https://example.com/pic.jpg",
                                                    "nullable": true
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": "123 Main St",
                                                    "nullable": true
                                                },
                                                "city": {
                                                    "type": "string",
                                                    "example": "New York",
                                                    "nullable": true
                                                },
                                                "email_verified_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": null
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-03-23T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-03-23T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated - No valid token provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/update": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Update authenticated user's profile",
                "description": "Updates the authenticated user's profile, including an optional profile picture upload.",
                "operationId": "b97920b06c9fc4021e15dec54eefcb56",
                "requestBody": {
                    "required": false,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "full_name": {
                                        "description": "User's full name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "User's email (must be unique)",
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255,
                                        "example": "john.doe@example.com"
                                    },
                                    "phone_number": {
                                        "description": "User's 10-digit phone number (must be unique)",
                                        "type": "string",
                                        "pattern": "^\\d{10}$",
                                        "example": "0123456789"
                                    },
                                    "picture": {
                                        "description": "Profile picture file (JPEG/PNG/JPG, max 2MB)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "address": {
                                        "description": "User's address",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "123 Main St",
                                        "nullable": true
                                    },
                                    "city": {
                                        "description": "User's city",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "New York",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "full_name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.doe@example.com"
                                                },
                                                "picture": {
                                                    "type": "string",
                                                    "example": "/storage/pictures/user_1_123456789.jpg"
                                                },
                                                "phone_number": {
                                                    "type": "string",
                                                    "example": "0123456789"
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": "123 Main St",
                                                    "nullable": true
                                                },
                                                "city": {
                                                    "type": "string",
                                                    "example": "New York",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "full_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The full name must be a string."
                                            }
                                        },
                                        "email": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The email has already been taken."
                                            }
                                        },
                                        "picture": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The picture must be an image."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message for unauthenticated access",
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/update-password": {
            "put": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Update authenticated user's password",
                "operationId": "912b71f24278e89f26f6c0bca8e9e730",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "current_password",
                                    "new_password"
                                ],
                                "properties": {
                                    "current_password": {
                                        "type": "string",
                                        "example": "Password123"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "example": "NewPassword456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error or incorrect current password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The current password is incorrect."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated - No valid token provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/email/verify/{id}/{hash}": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify a user's email address",
                "operationId": "4af257178d5a9abf76c64c62e3a677cb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The user ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "The email verification hash",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "expires",
                        "in": "query",
                        "description": "Expiration timestamp",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "signature",
                        "in": "query",
                        "description": "Signature for URL validation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email verified successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid verification link",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid verification link"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get All Categories",
                "description": "Retrieves a list of all categories.",
                "operationId": "getCategories",
                "responses": {
                    "200": {
                        "description": "Categories retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Categories retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Electronics"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-07-03T12:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-07-03T12:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/domains": {
            "get": {
                "tags": [
                    "Domains"
                ],
                "summary": "Get all domains",
                "operationId": "8eead5cc470eaadf40aeb9f17367451f",
                "responses": {
                    "200": {
                        "description": "Domains retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Domains retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Furniture"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/orders/buy-now": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Buy Now",
                "description": "Creates a validated order immediately for a single product, bypassing the cart.",
                "operationId": "buyNow",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "product_id",
                                    "quantity",
                                    "full_name",
                                    "phone_number",
                                    "wilaya_id",
                                    "commune_id"
                                ],
                                "properties": {
                                    "product_id": {
                                        "description": "The ID of the product to purchase",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quantity": {
                                        "description": "The quantity to purchase",
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "full_name": {
                                        "description": "Buyer's full name",
                                        "type": "string",
                                        "example": "Ahmed Benali"
                                    },
                                    "phone_number": {
                                        "description": "Phone number",
                                        "type": "string",
                                        "example": "+213661234567"
                                    },
                                    "address": {
                                        "description": "Address",
                                        "type": "string",
                                        "example": "123 Rue El Mokrani, Algiers",
                                        "nullable": true
                                    },
                                    "wilaya_id": {
                                        "description": "Wilaya ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "commune_id": {
                                        "description": "Commune ID",
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order created successfully"
                                        },
                                        "order_id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/orders/add-to-cart": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Add to Cart",
                "description": "Adds a product to an unvalidated order (cart). If an unvalidated order exists for the same supplier, it will be reused; otherwise, a new one is created.",
                "operationId": "addToCart",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "product_id",
                                    "quantity"
                                ],
                                "properties": {
                                    "product_id": {
                                        "description": "The ID of the product to add",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quantity": {
                                        "description": "The quantity to add",
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product added to cart",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product added to cart"
                                        },
                                        "order_id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The product_id field is required"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/orders/validate-cart": {
            "put": {
                "tags": [
                    "Orders"
                ],
                "summary": "Validate All Carts",
                "description": "Validates all unvalidated cart orders for the current user by setting them to validated and updating customer information.",
                "operationId": "validateCart",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "full_name",
                                    "phone_number",
                                    "wilaya_id",
                                    "commune_id"
                                ],
                                "properties": {
                                    "full_name": {
                                        "description": "Customer's full name",
                                        "type": "string",
                                        "example": "Ahmed Benali"
                                    },
                                    "phone_number": {
                                        "description": "Customer's phone number",
                                        "type": "string",
                                        "example": "+213661234567"
                                    },
                                    "address": {
                                        "description": "Customer's address",
                                        "type": "string",
                                        "example": "123 Rue El Mokrani, Algiers",
                                        "nullable": true
                                    },
                                    "wilaya_id": {
                                        "description": "Wilaya ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "commune_id": {
                                        "description": "Commune ID",
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "All carts validated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "All carts validated successfully"
                                        },
                                        "order_ids": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer"
                                            },
                                            "example": [
                                                1,
                                                2
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No orders to validate",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No orders to validate"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/orders/cart": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Get User Cart",
                "description": "Retrieves all unvalidated cart orders for the authenticated user, grouped by supplier.",
                "operationId": "getUserCart",
                "responses": {
                    "200": {
                        "description": "Cart retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cart retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "supplier_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "wilaya_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "commune_id": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "full_name": {
                                                        "type": "string",
                                                        "example": "Ahmed Benali"
                                                    },
                                                    "phone_number": {
                                                        "type": "string",
                                                        "example": "+213661234567"
                                                    },
                                                    "address": {
                                                        "type": "string",
                                                        "example": "123 Rue El Mokrani, Algiers"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "processing"
                                                    },
                                                    "order_date": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-05-16T14:38:14.000000Z"
                                                    },
                                                    "is_validated": {
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "order_products": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "order_id": {
                                                                    "type": "integer",
                                                                    "example": 3
                                                                },
                                                                "product_id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "quantity": {
                                                                    "type": "integer",
                                                                    "example": 4
                                                                },
                                                                "unit_price": {
                                                                    "type": "string",
                                                                    "example": "333.00"
                                                                },
                                                                "product": {
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "integer",
                                                                            "example": 1
                                                                        },
                                                                        "supplier_id": {
                                                                            "type": "integer",
                                                                            "example": 1
                                                                        },
                                                                        "category_id": {
                                                                            "type": "integer",
                                                                            "example": 1
                                                                        },
                                                                        "name": {
                                                                            "type": "string",
                                                                            "example": "Smartphone"
                                                                        },
                                                                        "price": {
                                                                            "type": "string",
                                                                            "example": "333.00"
                                                                        },
                                                                        "description": {
                                                                            "type": "string",
                                                                            "example": "good"
                                                                        },
                                                                        "visibility": {
                                                                            "type": "string",
                                                                            "example": "public"
                                                                        },
                                                                        "quantity": {
                                                                            "type": "integer",
                                                                            "example": 20
                                                                        },
                                                                        "minimum_quantity": {
                                                                            "type": "integer",
                                                                            "example": 10
                                                                        },
                                                                        "created_at": {
                                                                            "type": "string",
                                                                            "format": "date-time"
                                                                        },
                                                                        "updated_at": {
                                                                            "type": "string",
                                                                            "format": "date-time"
                                                                        },
                                                                        "pictures": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "properties": {
                                                                                    "id": {
                                                                                        "type": "integer",
                                                                                        "example": 1
                                                                                    },
                                                                                    "product_id": {
                                                                                        "type": "integer",
                                                                                        "example": 1
                                                                                    },
                                                                                    "picture": {
                                                                                        "type": "string",
                                                                                        "example": "product_pictures/example.png"
                                                                                    },
                                                                                    "created_at": {
                                                                                        "type": "string",
                                                                                        "format": "date-time"
                                                                                    },
                                                                                    "updated_at": {
                                                                                        "type": "string",
                                                                                        "format": "date-time"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve cart"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/orders/cart/update": {
            "put": {
                "tags": [
                    "Cart"
                ],
                "summary": "Update Product Quantity in Cart",
                "description": "Updates the quantity of a product in the authenticated user's cart.",
                "operationId": "updateCartProduct",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "product_id": {
                                        "description": "ID of the product",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quantity": {
                                        "description": "New quantity for the product",
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product quantity updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product quantity updated"
                                        },
                                        "order_id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Cart or product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cart or product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The product_id field must be an integer"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update cart"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/cart/remove/{product_id}": {
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Remove Product from Cart",
                "description": "Removes a product from the authenticated user's cart. Deletes the entire cart if it becomes empty. Optionally accepts an order_id to specify the cart.",
                "operationId": "removeCartProduct",
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "path",
                        "description": "ID of the product to remove",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "order_id": {
                                        "description": "The ID of the order (cart) to remove the product from",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product removed successfully or cart deleted if empty",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product removed from cart"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Cannot modify a validated order",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot modify a validated order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Cart or product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cart not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to remove product"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/orders/cart/clear": {
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Clear Cart",
                "description": "Deletes all non-validated orders and their products for the authenticated user.",
                "operationId": "clearCart",
                "responses": {
                    "200": {
                        "description": "Cart cleared successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cart cleared successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No active cart found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No active cart to clear"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to clear cart"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/supplier-orders/{id}": {
            "get": {
                "tags": [
                    "Supplier Orders"
                ],
                "summary": "Get a validated order by ID",
                "operationId": "27411dd77d3f918f9d5c7e606b0b65a1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Validated order details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "user_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "supplier_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "wilaya_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "commune_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "full_name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "phone_number": {
                                            "type": "string",
                                            "example": "+213661234567"
                                        },
                                        "address": {
                                            "type": "string",
                                            "example": "123 Main St",
                                            "nullable": true
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "pending",
                                                "processing",
                                                "delivered"
                                            ],
                                            "example": "pending"
                                        },
                                        "is_validated": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "order_products": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "order_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "product_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "quantity": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "unit_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 99.99
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized to view this order",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not authorized to view this order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Validated order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validated order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/supplier-orders/user/{user_id}": {
            "get": {
                "tags": [
                    "Supplier Orders"
                ],
                "summary": "Get all orders made by a user",
                "operationId": "8e7dab40cf9d560822fd68fc268cdd96",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "user_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "supplier_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "wilaya_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "commune_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "full_name": {
                                                "type": "string",
                                                "example": "John Doe"
                                            },
                                            "phone_number": {
                                                "type": "string",
                                                "example": "+213661234567"
                                            },
                                            "address": {
                                                "type": "string",
                                                "example": "123 Main St",
                                                "nullable": true
                                            },
                                            "status": {
                                                "type": "string",
                                                "enum": [
                                                    "pending",
                                                    "processing",
                                                    "delivered"
                                                ],
                                                "example": "pending"
                                            },
                                            "is_validated": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "order_products": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "order_id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "product_id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "quantity": {
                                                            "type": "integer",
                                                            "example": 2
                                                        },
                                                        "unit_price": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 99.99
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/supplier-orders/supplier/{supplier_id}": {
            "get": {
                "tags": [
                    "Supplier Orders"
                ],
                "summary": "Get all orders received by a supplier",
                "operationId": "27bc007ae21359ec07459a0166b3c63f",
                "parameters": [
                    {
                        "name": "supplier_id",
                        "in": "path",
                        "description": "Supplier ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of supplier's orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "user_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "supplier_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "wilaya_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "commune_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "full_name": {
                                                "type": "string",
                                                "example": "John Doe"
                                            },
                                            "phone_number": {
                                                "type": "string",
                                                "example": "+213661234567"
                                            },
                                            "address": {
                                                "type": "string",
                                                "example": "123 Main St",
                                                "nullable": true
                                            },
                                            "status": {
                                                "type": "string",
                                                "enum": [
                                                    "pending",
                                                    "processing",
                                                    "delivered"
                                                ],
                                                "example": "pending"
                                            },
                                            "is_validated": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "order_products": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "order_id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "product_id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "quantity": {
                                                            "type": "integer",
                                                            "example": 2
                                                        },
                                                        "unit_price": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 99.99
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access or supplier not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access or supplier not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders/{id}/status": {
            "patch": {
                "tags": [
                    "Supplier Orders"
                ],
                "summary": "Update order status",
                "description": "Updates the status of a specific order. Only the supplier or the user who placed the order can update it.",
                "operationId": "updateOrderStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "description": "New status of the order",
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "processing",
                                            "delivered"
                                        ],
                                        "example": "processing"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order status updated successfully"
                                        },
                                        "order": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "processing"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized to update this order",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not authorized to update this order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The status field is required"
                                        },
                                        "errors": {
                                            "properties": {
                                                "status": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The status must be one of: pending, processing, delivered"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "List All Products",
                "description": "Retrieves all public products with their pictures.",
                "operationId": "listAllProducts",
                "responses": {
                    "200": {
                        "description": "Products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "supplier_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "category_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Red T-shirt"
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "example": 10
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Comfortable cotton t-shirt"
                                                    },
                                                    "visibility": {
                                                        "type": "string",
                                                        "example": "public"
                                                    },
                                                    "quantity": {
                                                        "type": "integer",
                                                        "example": 100
                                                    },
                                                    "minimum_quantity": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "2025-01-01T00:00:00.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "example": "2025-01-01T00:00:00.000000Z"
                                                    },
                                                    "pictures": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "product_id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "picture": {
                                                                    "type": "string",
                                                                    "example": "/storage/product_pictures/red1.jpg"
                                                                },
                                                                "created_at": {
                                                                    "type": "string",
                                                                    "example": "2025-01-01T00:00:00.000000Z"
                                                                },
                                                                "updated_at": {
                                                                    "type": "string",
                                                                    "example": "2025-01-01T00:00:00.000000Z"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve products"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "operationId": "e8185e307706e2cd84bbcf5171e2f09d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "supplier_id",
                                    "name",
                                    "price",
                                    "quantity",
                                    "minimum_quantity"
                                ],
                                "properties": {
                                    "supplier_id": {
                                        "description": "ID of the supplier",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "description": "Name of the product",
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "Smartphone X"
                                    },
                                    "description": {
                                        "description": "Description of the product",
                                        "type": "string",
                                        "example": "Latest model with 128GB storage",
                                        "nullable": true
                                    },
                                    "category_id": {
                                        "description": "ID of the category",
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "price": {
                                        "description": "Price of the product",
                                        "type": "number",
                                        "format": "float",
                                        "example": 599.99
                                    },
                                    "quantity": {
                                        "description": "Stock quantity",
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "minimum_quantity": {
                                        "description": "Minimum stock quantity",
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "pictures[]": {
                                        "description": "Array of product images (JPEG, PNG, JPG, max 2MB each)",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        },
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "supplier_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Smartphone X"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Latest model with 128GB storage",
                                                    "nullable": true
                                                },
                                                "category_id": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "nullable": true
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 599.99
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "minimum_quantity": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-04-14T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-04-14T12:00:00Z"
                                                },
                                                "pictures": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "product_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "picture": {
                                                                "type": "string",
                                                                "example": "product_pictures/image1.jpg"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "supplier_id": "The supplier_id field is required."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get Product by ID",
                "description": "Retrieves a single product by its ID, including associated images.",
                "operationId": "showProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the product to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Smartphone"
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 599.99
                                                },
                                                "supplier_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-07-03T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-07-03T12:00:00Z"
                                                },
                                                "images": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "product_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "picture": {
                                                                "type": "string",
                                                                "example": "/images/smartphone_front.jpg"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Update a product",
                "operationId": "b4b789a4a3d0c47897f43991a5f12372",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "description": "Product ID",
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "supplier_id": {
                                        "description": "ID of the supplier",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "description": "Name of the product",
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "Smartphone X"
                                    },
                                    "description": {
                                        "description": "Description of the product",
                                        "type": "string",
                                        "example": "Updated model with 256GB storage",
                                        "nullable": true
                                    },
                                    "category_id": {
                                        "description": "ID of the category",
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "price": {
                                        "description": "Price of the product",
                                        "type": "number",
                                        "format": "float",
                                        "example": 699.99
                                    },
                                    "quantity": {
                                        "description": "Stock quantity",
                                        "type": "integer",
                                        "example": 50
                                    },
                                    "minimum_quantity": {
                                        "description": "Minimum stock quantity",
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "pictures[]": {
                                        "description": "Array of product images (JPEG, PNG, JPG, max 2MB each)",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        },
                                        "nullable": true
                                    },
                                    "images_to_delete[]": {
                                        "description": "Array of image IDs to delete",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "supplier_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Smartphone X"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Updated model with 256GB storage",
                                                    "nullable": true
                                                },
                                                "category_id": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "nullable": true
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 699.99
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "minimum_quantity": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-04-14T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-04-14T12:01:00Z"
                                                },
                                                "pictures": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "product_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "picture": {
                                                                "type": "string",
                                                                "example": "product_pictures/image1.jpg"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "price": "The price must be a number."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete a product",
                "operationId": "e80a6ca46716acee6b47ea1ac91663c0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "description": "Product ID",
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/products/{type}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "List Products by Supplier Sub-type",
                "description": "Retrieves all public products filtered by a single supplier sub-type (workshop, importer, or merchant).",
                "operationId": "listProductsBySubType",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Supplier sub-type (workshop, importer, or merchant)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "workshop",
                                "importer",
                                "merchant"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "supplier_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "category_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Red T-shirt"
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "example": 10
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Comfortable cotton t-shirt"
                                                    },
                                                    "visibility": {
                                                        "type": "string",
                                                        "example": "public"
                                                    },
                                                    "quantity": {
                                                        "type": "integer",
                                                        "example": 100
                                                    },
                                                    "minimum_quantity": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "2025-01-01T00:00:00.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "example": "2025-01-01T00:00:00.000000Z"
                                                    },
                                                    "pictures": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "product_id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "picture": {
                                                                    "type": "string",
                                                                    "example": "/storage/product_pictures/red1.jpg"
                                                                },
                                                                "created_at": {
                                                                    "type": "string",
                                                                    "example": "2025-01-01T00:00:00.000000Z"
                                                                },
                                                                "updated_at": {
                                                                    "type": "string",
                                                                    "example": "2025-01-01T00:00:00.000000Z"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid supplier type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid supplier type"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve products"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/products/{id}/supplier": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get Product with Supplier",
                "description": "Retrieves a public product with its supplier information by ID.",
                "operationId": "getProductWithSupplier",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Red T-shirt"
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "example": 10
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Comfortable cotton t-shirt"
                                                },
                                                "pictures": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "picture": {
                                                                "type": "string",
                                                                "example": "/storage/product_pictures/red1.jpg"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "supplier": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "ABC Imports"
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "example": "importer"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve product"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/products/{id}/store": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get Supplier by Product",
                "description": "Retrieves the supplier information for a public product by ID.",
                "operationId": "getSupplierByProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Supplier retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "ABC Imports"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "importer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product or supplier not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product or supplier not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve supplier"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/search": {
            "post": {
                "tags": [
                    "Product Search"
                ],
                "summary": "Search for similar products",
                "description": "Upload an image to search for similar products based on image features.",
                "operationId": "searchProducts",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "image"
                                ],
                                "properties": {
                                    "image": {
                                        "description": "The image file to search for similar products (JPEG, PNG, JPG, max 2MB)",
                                        "type": "string",
                                        "format": "binary",
                                        "example": "sample.jpg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response with similar products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Similar products found"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 7
                                                    },
                                                    "product_id": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "picture": {
                                                        "type": "string",
                                                        "example": "product_pictures/image1.png"
                                                    },
                                                    "product": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 3
                                                            },
                                                            "supplier_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Sample Product"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "A sample product"
                                                            },
                                                            "category_id": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "price": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 99.99
                                                            },
                                                            "quantity": {
                                                                "type": "integer",
                                                                "example": 10
                                                            },
                                                            "minimum_quantity": {
                                                                "type": "integer",
                                                                "example": 5
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No similar products or images found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No matching products found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "properties": {
                                                "image": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The image field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Search failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "FAISS index not available"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products/search-by-id": {
            "post": {
                "tags": [
                    "Product Search"
                ],
                "summary": "Search for similar products by image ID",
                "description": "Search for similar products using the ID of an existing product image.",
                "operationId": "searchProductsById",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "The ID of the product picture to search with",
                                        "type": "integer",
                                        "example": 7
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "The ID of the product picture to search with",
                                        "type": "integer",
                                        "example": 7
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response with similar products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Similar products found"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 7
                                                    },
                                                    "product_id": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "picture": {
                                                        "type": "string",
                                                        "example": "product_pictures/image1.png"
                                                    },
                                                    "product": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 3
                                                            },
                                                            "supplier_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Sample Product"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "A sample product"
                                                            },
                                                            "category_id": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "price": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 99.99
                                                            },
                                                            "quantity": {
                                                                "type": "integer",
                                                                "example": 10
                                                            },
                                                            "minimum_quantity": {
                                                                "type": "integer",
                                                                "example": 5
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No similar products or image not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No matching products found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "properties": {
                                                "id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The id field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Search failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "FAISS index not available"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/service_providers/{serviceProvider}/portfolio/projects": {
            "post": {
                "tags": [
                    "Portfolio"
                ],
                "summary": "Create a Project with Pictures",
                "description": "Creates a new project for a specified service provider owned by the authenticated user, with optional image uploads stored locally in the project_pictures table.",
                "operationId": "createProjectWithPictures",
                "parameters": [
                    {
                        "name": "serviceProvider",
                        "in": "path",
                        "description": "The ID of the service provider to associate the project with",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "The title of the project",
                                        "type": "string",
                                        "example": "E-commerce Platform"
                                    },
                                    "description": {
                                        "description": "The description of the project",
                                        "type": "string",
                                        "example": "A platform for online sales",
                                        "nullable": true
                                    },
                                    "pictures": {
                                        "description": "Array of image files to upload",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "service_provider_id": {
                                        "description": "Optional service provider ID (overrides URL parameter if provided)",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Project created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Project created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "service_provider_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "E-commerce Platform"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "A platform for online sales",
                                                    "nullable": true
                                                },
                                                "pictures": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "project_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "picture": {
                                                                "type": "string",
                                                                "example": "/storage/project_pictures/image1.jpg"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not authorized to create projects for this service provider"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service provider not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service provider not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The title field is required"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create project"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database or storage error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/service_providers/portfolio/projects/{id}": {
            "delete": {
                "tags": [
                    "Portfolio"
                ],
                "summary": "Delete a Project",
                "description": "Deletes a project and its associated pictures for the authenticated user, if they own the associated service provider.",
                "operationId": "deleteProject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the project to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Project deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not authorized to delete this project"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Project not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete project"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/service-providers/{service_provider_id}/portfolio/projects/{project_id}": {
            "put": {
                "tags": [
                    "Projects"
                ],
                "summary": "Update a Project",
                "description": "Updates an existing project and its pictures for a service provider, restricted to the authenticated user who owns the service provider.",
                "operationId": "updateProject",
                "parameters": [
                    {
                        "name": "service_provider_id",
                        "in": "path",
                        "description": "ID of the service provider",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "ID of the project to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "Title of the project",
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "Updated Website Project"
                                    },
                                    "description": {
                                        "description": "Description of the project",
                                        "type": "string",
                                        "example": "Updated description for a 5-page website",
                                        "nullable": true
                                    },
                                    "pictures": {
                                        "description": "Array of picture files to upload",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        },
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Project updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Project updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "service_provider_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Updated Website Project"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Updated description for a 5-page website",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-08T10:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-08T10:05:00.000000Z"
                                                },
                                                "pictures": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "project_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "picture": {
                                                                "type": "string",
                                                                "example": "project_pictures/image1.jpg"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-05-08T10:00:00.000000Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-05-08T10:00:00.000000Z"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not authorized to update this project"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project or service provider not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Project or service provider not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The title field is required"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update project"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database or storage error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/service-orders": {
            "post": {
                "tags": [
                    "Service Orders"
                ],
                "summary": "Create a Service Order",
                "description": "Creates a new service order for a service provider, placed by the authenticated user.",
                "operationId": "createServiceOrder",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "service_provider_id": {
                                        "description": "ID of the service provider",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "skill_id": {
                                        "description": "ID of the skill (optional)",
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "title": {
                                        "description": "Title of the order",
                                        "type": "string",
                                        "example": "Website Development"
                                    },
                                    "description": {
                                        "description": "Description of the order",
                                        "type": "string",
                                        "example": "Develop a 5-page website",
                                        "nullable": true
                                    },
                                    "deadline": {
                                        "description": "Deadline for the order",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-06-01"
                                    },
                                    "total_amount": {
                                        "description": "Total amount for the order",
                                        "type": "number",
                                        "format": "float",
                                        "example": 500,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Service order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service order created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "service_provider_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "skill_id": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "nullable": true
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Website Development"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Develop a 5-page website",
                                                    "nullable": true
                                                },
                                                "deadline": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-06-01"
                                                },
                                                "total_amount": {
                                                    "type": "string",
                                                    "example": "500.00",
                                                    "nullable": true
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "pending"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-08T10:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-08T10:00:00.000000Z"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 2
                                                        },
                                                        "full_name": {
                                                            "type": "string",
                                                            "example": "Jane Doe"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "service_provider": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "user_id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "user": {
                                                            "properties": {
                                                                "full_name": {
                                                                    "type": "string",
                                                                    "example": "Hadj Ben"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "skill": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "UI/UX Design"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot order from yourself"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service provider or skill not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The title field is required"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create service order"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/service-orders/{id}/status": {
            "patch": {
                "tags": [
                    "Service Orders"
                ],
                "summary": "Update Service Order Status",
                "description": "Updates the status of a service order, restricted to the service provider.",
                "operationId": "updateServiceOrderStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the service order",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "description": "The new status of the order",
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "confirmed",
                                            "completed",
                                            "cancelled"
                                        ],
                                        "example": "confirmed"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Service order status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service order status updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "service_provider_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "skill_id": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "nullable": true
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Website Development"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Develop a 5-page website",
                                                    "nullable": true
                                                },
                                                "deadline": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-06-01"
                                                },
                                                "total_amount": {
                                                    "type": "string",
                                                    "example": "500.00",
                                                    "nullable": true
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "pending",
                                                        "confirmed",
                                                        "completed",
                                                        "cancelled"
                                                    ],
                                                    "example": "confirmed"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-08T10:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-08T10:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not authorized to update this order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The status field is required"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update service order"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/service-orders/{id}": {
            "get": {
                "tags": [
                    "Service Orders"
                ],
                "summary": "Get Service Order by ID",
                "description": "Retrieves a service order by its ID, accessible to the customer or service provider.",
                "operationId": "getServiceOrderById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the service order",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service order retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "service_provider_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "skill_id": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "nullable": true
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Website Development"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Develop a 5-page website",
                                                    "nullable": true
                                                },
                                                "deadline": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-06-01"
                                                },
                                                "total_amount": {
                                                    "type": "string",
                                                    "example": "500.00",
                                                    "nullable": true
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "pending"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-08T10:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-08T10:00:00.000000Z"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 2
                                                        },
                                                        "full_name": {
                                                            "type": "string",
                                                            "example": "Jane Doe"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "service_provider": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "user_id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "user": {
                                                            "properties": {
                                                                "full_name": {
                                                                    "type": "string",
                                                                    "example": "Hadj Ben"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "skill": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "UI/UX Design"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not authorized to view this order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve service order"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/service-orders/user/{user_id}": {
            "get": {
                "tags": [
                    "Service Orders"
                ],
                "summary": "Get Service Orders by User ID",
                "description": "Retrieves all service orders placed by a specific user.",
                "operationId": "getServiceOrdersByUserId",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service orders retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "service_provider_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "skill_id": {
                                                        "type": "integer",
                                                        "example": 1,
                                                        "nullable": true
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Website Development"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Develop a 5-page website",
                                                        "nullable": true
                                                    },
                                                    "deadline": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "example": "2025-06-01"
                                                    },
                                                    "total_amount": {
                                                        "type": "string",
                                                        "example": "500.00",
                                                        "nullable": true
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "pending"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-05-08T10:00:00.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-05-08T10:00:00.000000Z"
                                                    },
                                                    "user": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "full_name": {
                                                                "type": "string",
                                                                "example": "Jane Doe"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "service_provider": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "user_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "user": {
                                                                "properties": {
                                                                    "full_name": {
                                                                        "type": "string",
                                                                        "example": "Hadj Ben"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "skill": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "UI/UX Design"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not authorized to view these orders"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve service orders"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/service-orders/service-provider/{service_provider_id}": {
            "get": {
                "tags": [
                    "Service Orders"
                ],
                "summary": "Get Service Orders by Service Provider ID",
                "description": "Retrieves all service orders assigned to a specific service provider, including full user information.",
                "operationId": "getServiceOrdersByServiceProviderId",
                "parameters": [
                    {
                        "name": "service_provider_id",
                        "in": "path",
                        "description": "ID of the service provider",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service orders retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "service_provider_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "skill_id": {
                                                        "type": "integer",
                                                        "example": 1,
                                                        "nullable": true
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Website Development"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Develop a 5-page website",
                                                        "nullable": true
                                                    },
                                                    "deadline": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "example": "2025-06-01"
                                                    },
                                                    "total_amount": {
                                                        "type": "string",
                                                        "example": "500.00",
                                                        "nullable": true
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "pending"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-05-08T10:00:00.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-05-08T10:00:00.000000Z"
                                                    },
                                                    "user": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "full_name": {
                                                                "type": "string",
                                                                "example": "Jane Doe"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "jane.doe@example.com"
                                                            },
                                                            "phone_number": {
                                                                "type": "string",
                                                                "example": "1234567890",
                                                                "nullable": true
                                                            },
                                                            "role": {
                                                                "type": "string",
                                                                "example": "user"
                                                            },
                                                            "picture": {
                                                                "type": "string",
                                                                "example": null,
                                                                "nullable": true
                                                            },
                                                            "address": {
                                                                "type": "string",
                                                                "example": "123 Algiers St, Algiers, Algeria",
                                                                "nullable": true
                                                            },
                                                            "city": {
                                                                "type": "string",
                                                                "example": null,
                                                                "nullable": true
                                                            },
                                                            "email_verified_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-05-12T12:48:11.000000Z",
                                                                "nullable": true
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-05-01T10:00:00.000000Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-05-01T10:00:00.000000Z"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "service_provider": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "user_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "user": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "full_name": {
                                                                        "type": "string",
                                                                        "example": "Hadj Ben"
                                                                    },
                                                                    "email": {
                                                                        "type": "string",
                                                                        "example": "hadj.ben@example.com"
                                                                    },
                                                                    "phone_number": {
                                                                        "type": "string",
                                                                        "example": "0987654321",
                                                                        "nullable": true
                                                                    },
                                                                    "role": {
                                                                        "type": "string",
                                                                        "example": "service_provider"
                                                                    },
                                                                    "picture": {
                                                                        "type": "string",
                                                                        "example": null,
                                                                        "nullable": true
                                                                    },
                                                                    "address": {
                                                                        "type": "string",
                                                                        "example": "456 Algiers St, Algiers, Algeria",
                                                                        "nullable": true
                                                                    },
                                                                    "city": {
                                                                        "type": "string",
                                                                        "example": null,
                                                                        "nullable": true
                                                                    },
                                                                    "email_verified_at": {
                                                                        "type": "string",
                                                                        "format": "date-time",
                                                                        "example": "2025-05-12T12:48:11.000000Z",
                                                                        "nullable": true
                                                                    },
                                                                    "created_at": {
                                                                        "type": "string",
                                                                        "format": "date-time",
                                                                        "example": "2025-05-01T10:00:00.000000Z"
                                                                    },
                                                                    "updated_at": {
                                                                        "type": "string",
                                                                        "format": "date-time",
                                                                        "example": "2025-05-01T10:00:00.000000Z"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "skill": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "UI/UX Design"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not authorized to view these orders"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve service orders"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/service-providers": {
            "get": {
                "tags": [
                    "Service Providers"
                ],
                "summary": "Get All Service Providers",
                "description": "Retrieves a list of all service providers with their user's full name, skills, pictures, and skill domain.",
                "operationId": "getAllServiceProviders",
                "responses": {
                    "200": {
                        "description": "Service providers retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "skill_domain_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Expert in web development",
                                                        "nullable": true
                                                    },
                                                    "starting_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 50,
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-01-01T00:00:00.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-01-01T00:00:00.000000Z"
                                                    },
                                                    "user": {
                                                        "properties": {
                                                            "full_name": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "nullable": true
                                                    },
                                                    "skill_domain": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Web Development"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "skills": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "name": {
                                                                    "type": "string",
                                                                    "example": "PHP"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "pictures": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "service_provider_id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "picture": {
                                                                    "type": "string",
                                                                    "example": "/storage/pictures/sp1.jpg"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve service providers"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Service Providers"
                ],
                "summary": "Create a Service Provider",
                "description": "Creates a new service provider for the authenticated user, assigning a domain, skills, and starting price.",
                "operationId": "createServiceProvider",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "type": "string",
                                        "example": "Experienced web developer specializing in e-commerce solutions",
                                        "nullable": true
                                    },
                                    "skill_domain_id": {
                                        "description": "ID of the skill domain",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "starting_price": {
                                        "description": "Starting price for services",
                                        "type": "number",
                                        "format": "float",
                                        "example": 50,
                                        "nullable": true
                                    },
                                    "skill_ids": {
                                        "description": "Array of skill IDs to associate with the provider",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Service provider created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service provider created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "skill_domain_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Experienced web developer specializing in e-commerce solutions",
                                                    "nullable": true
                                                },
                                                "starting_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 50,
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-07-11T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-07-11T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The skill_domain_id field is required"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create service provider"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/service-providers/portfolio/pictures/{id}": {
            "post": {
                "tags": [
                    "Portfolio"
                ],
                "summary": "Upload Pictures for a Service Provider",
                "description": "Uploads a list of images for a service provider's portfolio, stores them locally, and saves their paths in the service_provider_pictures table.",
                "operationId": "uploadServiceProviderPictures",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the service provider to associate the pictures with",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "pictures": {
                                        "description": "Array of image files to upload",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Pictures uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Pictures uploaded successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "skill_domain_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Experienced web developer",
                                                    "nullable": true
                                                },
                                                "pictures": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "service_provider_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "picture": {
                                                                "type": "string",
                                                                "example": "/storage/service_provider_pictures/image1.jpg"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not authorized to upload pictures for this service provider"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service provider not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service provider not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The pictures field is required"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to upload pictures"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database or storage error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Portfolio"
                ],
                "summary": "Delete a Service Provider Picture",
                "description": "Deletes a picture associated with a service provider's portfolio, if the authenticated user owns the service provider.",
                "operationId": "deleteServiceProviderPicture",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the picture to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Picture deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Picture deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not authorized to delete this picture"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Picture not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Picture not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete picture"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database or storage error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/service-providers/{id}": {
            "get": {
                "tags": [
                    "Service Providers"
                ],
                "summary": "Get Service Provider by ID",
                "description": "Retrieves a service provider by ID with its user's full name, skills, pictures, and skill domain.",
                "operationId": "getServiceProviderById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the service provider",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service provider retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "skill_domain_id": {
                                                    "type": "integer",
                                                    "example": 4
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Updated web developer profile",
                                                    "nullable": true
                                                },
                                                "starting_price": {
                                                    "type": "string",
                                                    "example": "75.00",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-05T09:31:04.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-06T09:28:56.000000Z"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "full_name": {
                                                            "type": "string",
                                                            "example": "Hadj Ben"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "hadj@gmail.com"
                                                        },
                                                        "phone_number": {
                                                            "type": "string",
                                                            "example": "0555123456",
                                                            "nullable": true
                                                        },
                                                        "role": {
                                                            "type": "string",
                                                            "example": "user"
                                                        },
                                                        "picture": {
                                                            "type": "string",
                                                            "example": null,
                                                            "nullable": true
                                                        },
                                                        "address": {
                                                            "type": "string",
                                                            "example": "123 Algiers St, Algiers, Algeria",
                                                            "nullable": true
                                                        },
                                                        "city": {
                                                            "type": "string",
                                                            "example": null,
                                                            "nullable": true
                                                        },
                                                        "email_verified_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2025-05-05T09:30:30.000000Z",
                                                            "nullable": true
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2025-05-05T09:30:30.000000Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2025-05-05T09:30:30.000000Z"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "skill_domain": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 4
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Content Creation"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2025-05-05T09:30:30.000000Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2025-05-05T09:30:30.000000Z"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "skills": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "UI/UX Design"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-05-05T09:30:30.000000Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-05-05T09:30:30.000000Z"
                                                            },
                                                            "pivot": {
                                                                "properties": {
                                                                    "service_provider_id": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "skill_id": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "pictures": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "service_provider_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "picture": {
                                                                "type": "string",
                                                                "example": "service_provider_pictures/0qlYO4DTdp7JrD4rCVakwvnNvQEXTcQkCpc1Lz54.jpg"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-05-05T09:33:07.000000Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-05-05T09:33:07.000000Z"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service provider not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service provider not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve service provider"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Service Providers"
                ],
                "summary": "Update a Service Provider",
                "description": "Updates an existing service provider for the authenticated user, modifying domain, skills, and starting price.",
                "operationId": "updateServiceProvider",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the service provider to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "type": "string",
                                        "example": "Experienced web developer specializing in e-commerce solutions",
                                        "nullable": true
                                    },
                                    "skill_domain_id": {
                                        "description": "ID of the skill domain",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "starting_price": {
                                        "description": "Starting price for services",
                                        "type": "number",
                                        "format": "float",
                                        "example": 50,
                                        "nullable": true
                                    },
                                    "skill_ids": {
                                        "description": "Array of skill IDs to associate with the provider",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Service provider updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service provider updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "skill_domain_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Experienced web developer specializing in e-commerce solutions",
                                                    "nullable": true
                                                },
                                                "starting_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 50,
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-07-11T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-07-11T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to update this service provider"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service provider not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service provider not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The skill_domain_id field is required"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update service provider"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Service Providers"
                ],
                "summary": "Delete a Service Provider",
                "description": "Deletes a service provider and its associated skills and pictures for the authenticated user.",
                "operationId": "deleteServiceProvider",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the service provider to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service provider deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service provider deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not authorized to delete this service provider"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service provider not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service provider not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete service provider"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/service-providers/by-user/{user_id}": {
            "get": {
                "tags": [
                    "Service Providers"
                ],
                "summary": "Get Service Provider by User ID",
                "description": "Retrieves a service provider by user ID with its user's full name and picture, skills, pictures, and skill domain.",
                "operationId": "getServiceProviderByUserId",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of the user associated with the service provider",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service provider retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "skill_domain_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Experienced web developer",
                                                    "nullable": true
                                                },
                                                "starting_price": {
                                                    "type": "string",
                                                    "example": "100.00",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-07T09:33:56.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-07T09:33:56.000000Z"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "full_name": {
                                                            "type": "string",
                                                            "example": "Hadj Ben"
                                                        },
                                                        "picture": {
                                                            "type": "string",
                                                            "example": null,
                                                            "nullable": true
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "skill_domain": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Design"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2025-05-05T09:30:30.000000Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2025-05-05T09:30:30.000000Z"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "skills": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "UI/UX Design"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-05-05T09:30:30.000000Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-05-05T09:30:30.000000Z"
                                                            },
                                                            "pivot": {
                                                                "properties": {
                                                                    "service_provider_id": {
                                                                        "type": "integer",
                                                                        "example": 2
                                                                    },
                                                                    "skill_id": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "pictures": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 3
                                                            },
                                                            "service_provider_id": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "picture": {
                                                                "type": "string",
                                                                "example": "service_provider_pictures/jgjpotxIBdZ8kbyMDULtlfdFUlpjnHtucWY426Jg.jpg"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-05-07T09:37:21.000000Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-05-07T09:37:21.000000Z"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service provider not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service provider not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve service provider"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/service-providers/{id}/portfolio": {
            "get": {
                "tags": [
                    "Portfolio"
                ],
                "summary": "Get Service Provider Portfolio",
                "description": "Retrieves a service provider's portfolio by ID, including all projects with their pictures and service provider pictures.",
                "operationId": "getServiceProviderPortfolio",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the service provider",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Portfolio retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "projects": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "service_provider_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "E-commerce Platform"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "A platform for online sales",
                                                                "nullable": true
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-05-07T09:33:56.000000Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-05-07T09:33:56.000000Z"
                                                            },
                                                            "pictures": {
                                                                "type": "array",
                                                                "items": {
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "integer",
                                                                            "example": 1
                                                                        },
                                                                        "project_id": {
                                                                            "type": "integer",
                                                                            "example": 1
                                                                        },
                                                                        "picture": {
                                                                            "type": "string",
                                                                            "example": "project_pictures/image1.jpg"
                                                                        },
                                                                        "created_at": {
                                                                            "type": "string",
                                                                            "format": "date-time",
                                                                            "example": "2025-05-07T09:37:21.000000Z"
                                                                        },
                                                                        "updated_at": {
                                                                            "type": "string",
                                                                            "format": "date-time",
                                                                            "example": "2025-05-07T09:37:21.000000Z"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "service_provider_pictures": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "service_provider_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "picture": {
                                                                "type": "string",
                                                                "example": "service_provider_pictures/image1.jpg"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-05-07T09:37:21.000000Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-05-07T09:37:21.000000Z"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service provider not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service provider not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve portfolio"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/skills": {
            "get": {
                "tags": [
                    "Skills"
                ],
                "summary": "List Skills",
                "description": "Retrieves a paginated list of skills.",
                "operationId": "listSkills",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Skills retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Web Development"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve skills"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/skill-domains": {
            "get": {
                "tags": [
                    "Skill Domains"
                ],
                "summary": "List Skill Domains",
                "description": "Retrieves a paginated list of skill domains.",
                "operationId": "listSkillDomains",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Skill domains retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Programming"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve skill domains"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/suppliers/{id}": {
            "get": {
                "tags": [
                    "Suppliers"
                ],
                "summary": "Get Supplier by ID",
                "description": "Retrieves a supplier by its ID, including associated user, domain, and type (workshop, importer, or merchant).",
                "operationId": "showSupplier",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the supplier to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Supplier retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Supplier retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "user_id": {
                                                    "type": "integer"
                                                },
                                                "business_name": {
                                                    "type": "string"
                                                },
                                                "address": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "picture": {
                                                    "type": "string"
                                                },
                                                "domain_id": {
                                                    "type": "integer"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "full_name": {
                                                            "type": "string"
                                                        },
                                                        "email": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "domain": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "workshop": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "supplier_id": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "importer": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "supplier_id": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "merchant": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "supplier_id": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "workshop",
                                                        "importer",
                                                        "merchant",
                                                        "none"
                                                    ],
                                                    "example": "workshop"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Supplier not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Supplier not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Suppliers"
                ],
                "summary": "Update a supplier",
                "operationId": "5df412225d4afffa950b1b2dad6c34a9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "description": "Supplier ID",
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "business_name": {
                                        "description": "Name of the business",
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "Updated Shop"
                                    },
                                    "description": {
                                        "description": "Description of the supplier",
                                        "type": "string",
                                        "example": "Updated description"
                                    },
                                    "address": {
                                        "description": "Physical address of the supplier",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "456 Oak Ave, City"
                                    },
                                    "domain_id": {
                                        "description": "ID of the domain",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "type": {
                                        "description": "Type of supplier",
                                        "type": "string",
                                        "enum": [
                                            "workshop",
                                            "importer",
                                            "merchant"
                                        ],
                                        "example": "merchant"
                                    },
                                    "picture": {
                                        "description": "Image file for supplier profile (JPEG, PNG, JPG, max 2MB)",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Supplier updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Supplier updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "business_name": {
                                                    "type": "string",
                                                    "example": "Updated Shop"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Updated description"
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": "456 Oak Ave, City"
                                                },
                                                "domain_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "picture": {
                                                    "type": "string",
                                                    "example": "pictures/supplier_1_updated.jpg",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-04-14T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-04-14T12:01:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Supplier not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Supplier not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "business_name": "The business_name must be a string."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Suppliers"
                ],
                "summary": "Delete a supplier",
                "operationId": "4498097c7247888776baa62b3ff682c5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "description": "Supplier ID",
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Supplier deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Supplier deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Supplier not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Supplier not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/suppliers/by-user/{userId}": {
            "get": {
                "tags": [
                    "Suppliers"
                ],
                "summary": "Get Suppliers by User ID",
                "description": "Retrieves all suppliers associated with a specific user by their user ID, including their associated domain data.",
                "operationId": "getSuppliersByUserId",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The ID of the user whose suppliers are to be retrieved",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Suppliers found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "user_id": {
                                                "type": "integer"
                                            },
                                            "business_name": {
                                                "type": "string"
                                            },
                                            "address": {
                                                "type": "string"
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "picture": {
                                                "type": "string"
                                            },
                                            "domain_id": {
                                                "type": "integer"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "domain": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No suppliers found for the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No suppliers found for this user"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/suppliers": {
            "get": {
                "tags": [
                    "Suppliers"
                ],
                "summary": "Get All Suppliers",
                "description": "Retrieves a list of all suppliers with their attributes, type (workshop, importer, or merchant), and associated domain.",
                "operationId": "getAllSuppliers",
                "responses": {
                    "200": {
                        "description": "Suppliers retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "business_name": {
                                                        "type": "string",
                                                        "example": "Tech Supplies Inc.",
                                                        "nullable": true
                                                    },
                                                    "address": {
                                                        "type": "string",
                                                        "example": "123 Tech St",
                                                        "nullable": true
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Supplier of tech components",
                                                        "nullable": true
                                                    },
                                                    "picture": {
                                                        "type": "string",
                                                        "example": "/storage/pictures/supplier1.jpg",
                                                        "nullable": true
                                                    },
                                                    "domain_id": {
                                                        "type": "integer",
                                                        "example": 1,
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-01-01T00:00:00.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-01-01T00:00:00.000000Z"
                                                    },
                                                    "type": {
                                                        "description": "Type of supplier based on subtable association (workshop, importer, merchant, or null)",
                                                        "type": "string",
                                                        "enum": [
                                                            "workshop",
                                                            "importer",
                                                            "merchant",
                                                            null
                                                        ],
                                                        "example": "workshop"
                                                    },
                                                    "domain": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Electronics"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve suppliers"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Suppliers"
                ],
                "summary": "Create a new supplier",
                "operationId": "c1ee06af9e1f197a4aa49c1dd74c981c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "business_name",
                                    "description",
                                    "address",
                                    "domain_id",
                                    "type"
                                ],
                                "properties": {
                                    "user_id": {
                                        "description": "ID of the user",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "business_name": {
                                        "description": "Name of the business",
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "Tech Shop"
                                    },
                                    "description": {
                                        "description": "Description of the supplier",
                                        "type": "string",
                                        "example": "Electronics and repair services"
                                    },
                                    "address": {
                                        "description": "Physical address of the supplier",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "123 Main St, City"
                                    },
                                    "domain_id": {
                                        "description": "ID of the domain",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "type": {
                                        "description": "Type of supplier",
                                        "type": "string",
                                        "enum": [
                                            "workshop",
                                            "importer",
                                            "merchant"
                                        ],
                                        "example": "workshop"
                                    },
                                    "picture": {
                                        "description": "Image file for supplier profile (JPEG, PNG, JPG, max 2MB)",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Supplier created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Supplier created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "business_name": {
                                                    "type": "string",
                                                    "example": "Tech Shop"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Electronics and repair services"
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": "123 Main St, City"
                                                },
                                                "domain_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "picture": {
                                                    "type": "string",
                                                    "example": "pictures/supplier_1.jpg",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-04-14T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-04-14T12:00:00Z"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "full_name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john@example.com"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "domain": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Electronics"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "workshop": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "supplier_id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "importer": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "supplier_id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "merchant": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "supplier_id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "user_id": "The user_id field is required."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/suppliers/{id}/products": {
            "get": {
                "tags": [
                    "Suppliers"
                ],
                "summary": "Get Products by Supplier",
                "description": "Retrieves all products associated with a specific supplier by their ID, including product images.",
                "operationId": "getSupplierProducts",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the supplier whose products are to be retrieved",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Products retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Smartphone"
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 599.99
                                                    },
                                                    "supplier_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-07-11T12:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-07-11T12:00:00Z"
                                                    },
                                                    "pictures": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "product_id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "picture": {
                                                                    "type": "string",
                                                                    "example": "/images/smartphone_front.jpg"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Supplier not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Supplier not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/wilayas": {
            "get": {
                "tags": [
                    "Wilayas"
                ],
                "summary": "Get all Wilayas",
                "description": "Retrieves a list of all Wilayas for populating a dropdown.",
                "operationId": "getWilayas",
                "responses": {
                    "200": {
                        "description": "Wilayas retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Alger"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve Wilayas"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/wilayas/{wilaya_id}/communes": {
            "get": {
                "tags": [
                    "Wilayas"
                ],
                "summary": "Get Communes by Wilaya ID",
                "description": "Retrieves a list of Communes for a specific Wilaya ID to populate a dropdown.",
                "operationId": "getCommunesByWilaya",
                "parameters": [
                    {
                        "name": "wilaya_id",
                        "in": "path",
                        "description": "ID of the Wilaya",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Communes retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Bab El Oued"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Wilaya not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Wilaya not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve Communes"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/working-hours": {
            "post": {
                "tags": [
                    "Working Hours"
                ],
                "summary": "Create working hours for a workspace",
                "description": "Creates multiple working hour entries for a given workspace. Each entry includes day, opening and closing times, and whether the workspace is open.",
                "operationId": "5713ef93eba73bbd6da177b39f25e4fd",
                "parameters": [
                    {
                        "name": "workspace_id",
                        "in": "path",
                        "description": "ID of the workspace",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "required": [
                                        "day",
                                        "time_from",
                                        "time_to",
                                        "is_open"
                                    ],
                                    "properties": {
                                        "day": {
                                            "type": "string",
                                            "enum": [
                                                "Monday",
                                                "Tuesday",
                                                "Wednesday",
                                                "Thursday",
                                                "Friday",
                                                "Saturday",
                                                "Sunday"
                                            ],
                                            "example": "Monday"
                                        },
                                        "time_from": {
                                            "type": "string",
                                            "format": "time",
                                            "example": "09:00"
                                        },
                                        "time_to": {
                                            "type": "string",
                                            "format": "time",
                                            "example": "17:00"
                                        },
                                        "is_open": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Working hours created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Working hours created successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "workspace_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "day": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "time_from": {
                                                        "type": "string",
                                                        "format": "time",
                                                        "example": "09:00:00"
                                                    },
                                                    "time_to": {
                                                        "type": "string",
                                                        "format": "time",
                                                        "example": "17:00:00"
                                                    },
                                                    "is_open": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Workspace not found or unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Workspace not found or unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/workspaces/{workspace_id}/working-hours": {
            "put": {
                "tags": [
                    "Working Hours"
                ],
                "summary": "Update multiple working hours by ID",
                "operationId": "4035a0f8f2b1211eb6e2f4078262fe9e",
                "parameters": [
                    {
                        "name": "workspace_id",
                        "in": "path",
                        "description": "ID of the workspace",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "day": {
                                            "type": "string",
                                            "example": "Monday"
                                        },
                                        "time_from": {
                                            "type": "string",
                                            "format": "time",
                                            "example": "08:00"
                                        },
                                        "time_to": {
                                            "type": "string",
                                            "format": "time",
                                            "example": "17:00"
                                        },
                                        "is_open": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Working hours updated successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Workspace or working hour not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/workspaces/studio/create": {
            "post": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Create a Studio Workspace",
                "description": "Creates a new studio workspace with associated details, services, and a single main picture for the authenticated user.",
                "operationId": "createStudioWorkspace",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "business_name": {
                                        "description": "Business name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "PhotoSnap Studio"
                                    },
                                    "phone_number": {
                                        "description": "Phone number",
                                        "type": "string",
                                        "maxLength": 50,
                                        "example": "1234567890"
                                    },
                                    "email": {
                                        "description": "Email",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "contact@photosnap.com"
                                    },
                                    "location": {
                                        "description": "General location",
                                        "type": "string",
                                        "example": "Downtown",
                                        "nullable": true
                                    },
                                    "address": {
                                        "description": "Street address",
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "123 Main St"
                                    },
                                    "description": {
                                        "description": "Description",
                                        "type": "string",
                                        "example": "Professional photography studio",
                                        "nullable": true
                                    },
                                    "opening_hours": {
                                        "description": "Opening hours",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "9AM-5PM",
                                        "nullable": true
                                    },
                                    "picture": {
                                        "description": "Main workspace picture",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "price_per_hour": {
                                        "description": "Hourly rental price",
                                        "type": "number",
                                        "format": "float",
                                        "example": 50
                                    },
                                    "price_per_day": {
                                        "description": "Daily rental price",
                                        "type": "number",
                                        "format": "float",
                                        "example": 200
                                    },
                                    "studio_service_ids": {
                                        "description": "Array of studio service IDs",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Studio created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Studio created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "business_name": {
                                                    "type": "string",
                                                    "example": "PhotoSnap Studio"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "studio"
                                                },
                                                "studio": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The business_name field is required"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create studio"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/workspaces/{workspace_id}/studio/images": {
            "post": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Insert Images for a Studio Workspace",
                "description": "Uploads and associates multiple additional images with an existing studio workspace for the authenticated user.",
                "operationId": "insertStudioWorkspaceImages",
                "parameters": [
                    {
                        "name": "workspace_id",
                        "in": "path",
                        "description": "ID of the studio workspace to add images to",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "images": {
                                        "description": "Array of image files to upload",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Images inserted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Images inserted successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "workspace_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "image_url": {
                                                        "type": "string",
                                                        "example": "workspace_images/image1.jpg"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-05-12T12:00:00.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-05-12T12:00:00.000000Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to add images to this workspace"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Workspace not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Workspace not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The images field is required"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to insert images"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/workspaces/coworking/create": {
            "post": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Create a Coworking Workspace",
                "description": "Creates a new coworking workspace with associated details and a single main picture for the authenticated user.",
                "operationId": "createCoworkingWorkspace",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "business_name": {
                                        "description": "Business name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "WorkHub Coworking"
                                    },
                                    "phone_number": {
                                        "description": "Phone number",
                                        "type": "string",
                                        "maxLength": 50,
                                        "example": "1234567890"
                                    },
                                    "email": {
                                        "description": "Email",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "info@workhub.com"
                                    },
                                    "location": {
                                        "description": "General location",
                                        "type": "string",
                                        "example": "Downtown",
                                        "nullable": true
                                    },
                                    "address": {
                                        "description": "Street address",
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "456 Elm St"
                                    },
                                    "description": {
                                        "description": "Description",
                                        "type": "string",
                                        "example": "Modern coworking space with Wi-Fi",
                                        "nullable": true
                                    },
                                    "opening_hours": {
                                        "description": "Opening hours",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "8AM-6PM",
                                        "nullable": true
                                    },
                                    "picture": {
                                        "description": "Main workspace picture",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "price_per_day": {
                                        "description": "Daily rental price",
                                        "type": "number",
                                        "format": "float",
                                        "example": 25
                                    },
                                    "price_per_month": {
                                        "description": "Monthly rental price",
                                        "type": "number",
                                        "format": "float",
                                        "example": 400
                                    },
                                    "seating_capacity": {
                                        "description": "Number of available seats",
                                        "type": "integer",
                                        "example": 50
                                    },
                                    "meeting_rooms": {
                                        "description": "Number of meeting rooms",
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Coworking created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Coworking created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "business_name": {
                                                    "type": "string",
                                                    "example": "WorkHub Coworking"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "coworking"
                                                },
                                                "coworking": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The business_name field is required"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create coworking"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/workspaces/{workspace_id}/coworking/images": {
            "post": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Insert Images for a Coworking Workspace",
                "description": "Uploads and associates multiple additional images with an existing coworking workspace for the authenticated user.",
                "operationId": "insertCoworkingWorkspaceImages",
                "parameters": [
                    {
                        "name": "workspace_id",
                        "in": "path",
                        "description": "ID of the coworking workspace to add images to",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "images": {
                                        "description": "Array of additional image files to upload",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Images inserted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Images inserted successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "workspace_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "image_url": {
                                                        "type": "string",
                                                        "example": "workspace_images/image1.jpg"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-05-12T12:00:00.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-05-12T12:00:00.000000Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to add images to this workspace"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Workspace not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Workspace not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The images field is required"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to insert images"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/workspaces/type/{type}": {
            "get": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Get Workspaces by Type",
                "description": "Retrieves all workspaces of the specified type (studio or coworking) with their associated details, excluding images, for the authenticated user or publicly.",
                "operationId": "getWorkspacesByType",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of workspace to retrieve (studio or coworking)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "studio",
                                "coworking"
                            ],
                            "example": "studio"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Workspaces retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Workspaces retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "business_name": {
                                                        "type": "string",
                                                        "example": "PhotoSnap Studio"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "example": "studio"
                                                    },
                                                    "phone_number": {
                                                        "type": "string",
                                                        "example": "1234567890"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "contact@photosnap.com"
                                                    },
                                                    "location": {
                                                        "type": "string",
                                                        "example": "Downtown",
                                                        "nullable": true
                                                    },
                                                    "address": {
                                                        "type": "string",
                                                        "example": "123 Main St"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Professional photography studio",
                                                        "nullable": true
                                                    },
                                                    "opening_hours": {
                                                        "type": "string",
                                                        "example": "9AM-5PM",
                                                        "nullable": true
                                                    },
                                                    "picture": {
                                                        "type": "string",
                                                        "example": "workspace_pictures/studio.jpg",
                                                        "nullable": true
                                                    },
                                                    "is_active": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-05-12T12:00:00.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-05-12T12:00:00.000000Z"
                                                    },
                                                    "studio": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "workspace_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "price_per_hour": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 50
                                                            },
                                                            "price_per_day": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 200
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-05-12T12:00:00.000000Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-05-12T12:00:00.000000Z"
                                                            },
                                                            "services": {
                                                                "type": "array",
                                                                "items": {
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "integer",
                                                                            "example": 1
                                                                        },
                                                                        "service": {
                                                                            "type": "string",
                                                                            "example": "Lighting Equipment"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            }
                                                        },
                                                        "type": "object",
                                                        "nullable": true
                                                    },
                                                    "coworking": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "workspace_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "price_per_day": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 25
                                                            },
                                                            "price_per_month": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 400
                                                            },
                                                            "seating_capacity": {
                                                                "type": "integer",
                                                                "example": 50
                                                            },
                                                            "meeting_rooms": {
                                                                "type": "integer",
                                                                "example": 3
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-05-12T12:00:00.000000Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-05-12T12:00:00.000000Z"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid workspace type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid workspace type. Use 'studio' or 'coworking'."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve workspaces"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    },
                    {}
                ]
            }
        },
        "/api/workspaces/{workspace_id}": {
            "get": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Get Workspace by ID",
                "description": "Retrieves a single workspace by its ID, including all associated details and images, for the authenticated user or publicly.",
                "operationId": "getWorkspaceById",
                "parameters": [
                    {
                        "name": "workspace_id",
                        "in": "path",
                        "description": "ID of the workspace to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Workspace retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Workspace retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "business_name": {
                                                    "type": "string",
                                                    "example": "PhotoSnap Studio"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "studio"
                                                },
                                                "phone_number": {
                                                    "type": "string",
                                                    "example": "1234567890"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "contact@photosnap.com"
                                                },
                                                "location": {
                                                    "type": "string",
                                                    "example": "Downtown",
                                                    "nullable": true
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": "123 Main St"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Professional photography studio",
                                                    "nullable": true
                                                },
                                                "opening_hours": {
                                                    "type": "string",
                                                    "example": "9AM-5PM",
                                                    "nullable": true
                                                },
                                                "picture": {
                                                    "type": "string",
                                                    "example": "workspace_pictures/studio.jpg",
                                                    "nullable": true
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-12T12:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-12T12:00:00.000000Z"
                                                },
                                                "studio": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "workspace_id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "price_per_hour": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 50
                                                        },
                                                        "price_per_day": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 200
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2025-05-12T12:00:00.000000Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2025-05-12T12:00:00.000000Z"
                                                        },
                                                        "services": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "service": {
                                                                        "type": "string",
                                                                        "example": "Lighting Equipment"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "coworking": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "workspace_id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "price_per_day": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 25
                                                        },
                                                        "price_per_month": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 400
                                                        },
                                                        "seating_capacity": {
                                                            "type": "integer",
                                                            "example": 50
                                                        },
                                                        "meeting_rooms": {
                                                            "type": "integer",
                                                            "example": 3
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2025-05-12T12:00:00.000000Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2025-05-12T12:00:00.000000Z"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "images": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "workspace_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "image_url": {
                                                                "type": "string",
                                                                "example": "workspace_images/image1.jpg"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-05-12T12:00:00.000000Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-05-12T12:00:00.000000Z"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Workspace not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Workspace not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve workspace"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    },
                    {}
                ]
            }
        },
        "/api/workspaces/user": {
            "get": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Get Workspaces by Authenticated User",
                "description": "Retrieves all active workspaces (studio or coworking) for the currently authenticated user, including studio and coworking details (excluding services and images).",
                "operationId": "getWorkspacesByUser",
                "responses": {
                    "200": {
                        "description": "Workspaces retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Workspaces retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "business_name": {
                                                        "type": "string",
                                                        "example": "PhotoSnap Studio"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "example": "studio"
                                                    },
                                                    "phone_number": {
                                                        "type": "string",
                                                        "example": "1234567890"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "contact@photosnap.com"
                                                    },
                                                    "location": {
                                                        "type": "string",
                                                        "example": "Downtown",
                                                        "nullable": true
                                                    },
                                                    "address": {
                                                        "type": "string",
                                                        "example": "123 Main St"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Professional photography studio",
                                                        "nullable": true
                                                    },
                                                    "opening_hours": {
                                                        "type": "string",
                                                        "example": "9AM-5PM",
                                                        "nullable": true
                                                    },
                                                    "picture": {
                                                        "type": "string",
                                                        "example": "workspace_pictures/studio.jpg",
                                                        "nullable": true
                                                    },
                                                    "is_active": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-05-13T23:02:00.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-05-13T23:02:00.000000Z"
                                                    },
                                                    "studio": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "workspace_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "price_per_hour": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 50
                                                            },
                                                            "price_per_day": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 200
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-05-13T23:02:00.000000Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-05-13T23:02:00.000000Z"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "nullable": true
                                                    },
                                                    "coworking": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "workspace_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "price_per_day": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 25
                                                            },
                                                            "price_per_month": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 400
                                                            },
                                                            "seating_capacity": {
                                                                "type": "integer",
                                                                "example": 50
                                                            },
                                                            "meeting_rooms": {
                                                                "type": "integer",
                                                                "example": 3
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-05-13T23:02:00.000000Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-05-13T23:02:00.000000Z"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve workspaces"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/workspaces/studio/{workspace_id}": {
            "post": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Update a Studio Workspace",
                "description": "Updates an existing studio workspace, its associated details, services, and images for the authenticated user.",
                "operationId": "updateStudio",
                "parameters": [
                    {
                        "name": "workspace_id",
                        "in": "path",
                        "description": "ID of the studio workspace to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "business_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "PhotoSnap Studio"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "maxLength": 50,
                                        "example": "1234567890"
                                    },
                                    "email": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "contact@photosnap.com"
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "Downtown",
                                        "nullable": true
                                    },
                                    "address": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "123 Main St"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Professional photography studio",
                                        "nullable": true
                                    },
                                    "opening_hours": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "9AM-5PM",
                                        "nullable": true
                                    },
                                    "picture": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "price_per_hour": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0,
                                        "example": 50
                                    },
                                    "price_per_day": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0,
                                        "example": 200
                                    },
                                    "studio_service_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "nullable": true
                                    },
                                    "images": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        },
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Studio workspace updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Studio workspace updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "business_name": {
                                                    "type": "string",
                                                    "example": "PhotoSnap Studio"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "studio"
                                                },
                                                "phone_number": {
                                                    "type": "string",
                                                    "example": "1234567890"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "contact@photosnap.com"
                                                },
                                                "location": {
                                                    "type": "string",
                                                    "example": "Downtown",
                                                    "nullable": true
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": "123 Main St"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Professional photography studio",
                                                    "nullable": true
                                                },
                                                "opening_hours": {
                                                    "type": "string",
                                                    "example": "9AM-5PM",
                                                    "nullable": true
                                                },
                                                "picture": {
                                                    "type": "string",
                                                    "example": "workspace_pictures/studio.jpg",
                                                    "nullable": true
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-14T23:29:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-14T23:29:00.000000Z"
                                                },
                                                "studio": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "workspace_id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "price_per_hour": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 50
                                                        },
                                                        "price_per_day": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 200
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2025-05-14T23:29:00.000000Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2025-05-14T23:29:00.000000Z"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "images": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "workspace_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "image_url": {
                                                                "type": "string",
                                                                "example": "workspace_images/image1.jpg"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-05-14T23:29:00.000000Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-05-14T23:29:00.000000Z"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to update this workspace"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Workspace not found or not a studio",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Workspace not found or not a studio"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update studio workspace"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Delete a Studio Workspace",
                "description": "Deletes a studio workspace and its associated data (studio details and images) for the authenticated user.",
                "operationId": "deleteStudio",
                "parameters": [
                    {
                        "name": "workspace_id",
                        "in": "path",
                        "description": "ID of the studio workspace to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Studio workspace deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Studio workspace deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to delete this workspace"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Workspace not found or not a studio",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Workspace not found or not a studio"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete studio workspace"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/workspaces/coworking/{workspace_id}": {
            "post": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Update a Coworking Workspace",
                "description": "Updates an existing coworking workspace and its associated details for the authenticated user.",
                "operationId": "updateCoworking",
                "parameters": [
                    {
                        "name": "workspace_id",
                        "in": "path",
                        "description": "ID of the coworking workspace to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "business_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "WorkHub Coworking"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "maxLength": 50,
                                        "example": "1234567890"
                                    },
                                    "email": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "info@workhub.com"
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "Downtown",
                                        "nullable": true
                                    },
                                    "address": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "456 Elm St"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Modern coworking space",
                                        "nullable": true
                                    },
                                    "opening_hours": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "8AM-6PM",
                                        "nullable": true
                                    },
                                    "picture": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "price_per_day": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0,
                                        "example": 25
                                    },
                                    "price_per_month": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0,
                                        "example": 400
                                    },
                                    "seating_capacity": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "example": 50
                                    },
                                    "meeting_rooms": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Coworking workspace updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Coworking workspace updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "business_name": {
                                                    "type": "string",
                                                    "example": "WorkHub Coworking"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "coworking"
                                                },
                                                "phone_number": {
                                                    "type": "string",
                                                    "example": "1234567890"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "info@workhub.com"
                                                },
                                                "location": {
                                                    "type": "string",
                                                    "example": "Downtown",
                                                    "nullable": true
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": "456 Elm St"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Modern coworking space",
                                                    "nullable": true
                                                },
                                                "opening_hours": {
                                                    "type": "string",
                                                    "example": "8AM-6PM",
                                                    "nullable": true
                                                },
                                                "picture": {
                                                    "type": "string",
                                                    "example": "workspace_pictures/coworking.jpg",
                                                    "nullable": true
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-14T23:17:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-14T23:17:00.000000Z"
                                                },
                                                "coworking": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "workspace_id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "price_per_day": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 25
                                                        },
                                                        "price_per_month": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 400
                                                        },
                                                        "seating_capacity": {
                                                            "type": "integer",
                                                            "example": 50
                                                        },
                                                        "meeting_rooms": {
                                                            "type": "integer",
                                                            "example": 3
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2025-05-14T23:17:00.000000Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2025-05-14T23:17:00.000000Z"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to update this workspace"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Workspace not found or not a coworking",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Workspace not found or not a coworking"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update coworking workspace"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Delete a Coworking Workspace",
                "description": "Deletes a coworking workspace and its associated data (coworking details and images) for the authenticated user.",
                "operationId": "deleteCoworking",
                "parameters": [
                    {
                        "name": "workspace_id",
                        "in": "path",
                        "description": "ID of the coworking workspace to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coworking workspace deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Coworking workspace deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to delete this workspace"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Workspace not found or not a coworking",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Workspace not found or not a coworking"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete coworking workspace"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/workspaces/{workspace_id}/studio/images/{image_id}": {
            "delete": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Delete Studio Workspace Image",
                "description": "Deletes an image associated with a studio workspace owned by the authenticated user.",
                "operationId": "deleteStudioImage",
                "parameters": [
                    {
                        "name": "workspace_id",
                        "in": "path",
                        "description": "ID of the workspace",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "image_id",
                        "in": "path",
                        "description": "ID of the image to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Image deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Workspace not found or not a studio",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Workspace not found or not a studio"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete image"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Server error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/workspaces/{workspace_id}/coworking/images/{image_id}": {
            "delete": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Delete Coworking Workspace Image",
                "description": "Deletes an image associated with a coworking workspace owned by the authenticated user.",
                "operationId": "deleteCoworkingImage",
                "parameters": [
                    {
                        "name": "workspace_id",
                        "in": "path",
                        "description": "ID of the workspace",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "image_id",
                        "in": "path",
                        "description": "ID of the image to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Image deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to delete images from this workspace"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Workspace or image not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Workspace not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete image"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Server error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Categories",
            "description": "Categories"
        },
        {
            "name": "Domains",
            "description": "Domains"
        },
        {
            "name": "Orders",
            "description": "Orders"
        },
        {
            "name": "Cart",
            "description": "Cart"
        },
        {
            "name": "Supplier Orders",
            "description": "Supplier Orders"
        },
        {
            "name": "Products",
            "description": "Products"
        },
        {
            "name": "Product Search",
            "description": "Product Search"
        },
        {
            "name": "Portfolio",
            "description": "Portfolio"
        },
        {
            "name": "Projects",
            "description": "Projects"
        },
        {
            "name": "Service Orders",
            "description": "Service Orders"
        },
        {
            "name": "Service Providers",
            "description": "Service Providers"
        },
        {
            "name": "Skills",
            "description": "Skills"
        },
        {
            "name": "Skill Domains",
            "description": "Skill Domains"
        },
        {
            "name": "Suppliers",
            "description": "Suppliers"
        },
        {
            "name": "Wilayas",
            "description": "Wilayas"
        },
        {
            "name": "Working Hours",
            "description": "Working Hours"
        },
        {
            "name": "Workspaces",
            "description": "Workspaces"
        }
    ]
}